- # First detect if we have options passed in by a proxy or not.
- # In config.rb, any .html.markdown files are proxied to a template file. That template file
- # is also passed the markdown files YAML metadata. We are detecting here if that metadata
- # is present. If it isn't, we use the template file's metadata.
- #
- # Additionally, if the file is a .html.haml file, we just it's native metadata and don't
- # worry about any of this.
- if defined? yaml_options and yaml_options.is_a? Hash and yaml_options.length > 0
	- slide_configuration_data = yaml_options
- else
	- slide_configuration_data = current_resource.data

- # This is all of our switches to control the display:

- # Load the slideshow source:
- if locals and locals.has_key? :markdown_source
	- slideshow_source = File.open(Dir.pwd + "/source/#{locals[:markdown_source]}").read
- else
	- slideshow_source = File.open(current_page.source_file).read

- # Attach twitter name to each slide.
- # Defaults to default_twitter_name (above) unless twitter_name is set.
- # Defaults to not showing a slide on the first slide unless twitter_name_start is set (1 indexed).
- default_twitter_name = "oncomouse"
- default_twitter_name_start = 2
- attach_twitter_name = slide_configuration_data['twitter']

- # Test for animations. ANIMATIONS ARE INCOMPATIBLE WITH THE PROGRESS BAR (ANIMATIONS WILL BE DISABLED)
- attach_animations = (slideshow_source =~ /class\: .*animated/)

- # Test for Charts.js support
- # To load chart support, you also need to have a javascript file in source/javascripts/XX/YY.js where XX and YY matches the file path of your remark presentation (so source/remark/XX/YY.html is how you get the values).
- # This javascript file needs to have one function, called "load_charts()."
- # This function will contain all the initialization calls to Charts.js.
- if slideshow_source =~ /\<canvas/
	- chart_type = "Charts.js"
	- load_charts = true
- elsif slideshow_source =~ /\<svg/
	- chart_type = "nv.d3.js"
	- load_charts = true
- if load_charts
	- chart_file_js = sitemap.resources.select{|a| (a.destination_path.match current_resource.destination_path.gsub(/\.html/,".js"))}[0]
	- if !chart_file_js.nil?
		- chart_file_js = chart_file_js.destination_path.gsub(/javascripts\//,"")
	- else
		- load_charts = false
	

- # Test for progress_bar support. Can be added by setting progress_bar to true in the slide metadata.
- attach_progress_bar = slide_configuration_data['progress_bar']
!!! 5
%html
	%head
		%meta{ :charset => "utf-8" }/
		%title
			- if slide_configuration_data['title']
				= slide_configuration_data['title']
		= stylesheet_link_tag("remark/slides.css", :media => "all", :rel => "stylesheet" )
		- if attach_animations and not attach_progress_bar
			= stylesheet_link_tag("remark/add-ons/animate.css", :media => "all", :rel => "stylesheet" )
		- if attach_progress_bar
			= stylesheet_link_tag("remark/add-ons/progress-bar.css", :media => "all", :rel => "stylesheet" )
		- slideshow_specific_css = sitemap.resources.select{|a| (a.destination_path.match current_resource.destination_path.gsub(/\.html/,".css"))}[0]
		- if !slideshow_specific_css.nil?
			= stylesheet_link_tag(slideshow_specific_css.destination_path.gsub(/stylesheets\//,""), :media => "all", :rel => "stylesheet" )
		= javascript_include_tag("lib/head.min.js")

		- # Assemble the call to head.js (ie. establish which libraries need loading)
		- head_js_array = []
		- head_js_array.push(javascript_path("remark/remark.min.js"))
		- if load_charts and chart_type == "Charts.js"
			- head_js_array.push(javascript_path("lib/zepto.min.js"))
			- head_js_array.push(javascript_path("lib/Charts.js"))
			- head_js_array.push(javascript_path(chart_file_js))
		- elsif load_charts and chart_type == "nv.d3.js"
			- head_js_array.push(javascript_path("lib/nvd3/d3.min.js"))
			- head_js_array.push(javascript_path("lib/nvd3/nv.d3.min.js"))
			- head_js_array.push(asset_path(:css, "nvd3/nv.d3.css"))
			- head_js_array.push(javascript_path(chart_file_js))
		- if attach_progress_bar
			- head_js_array.push(javascript_path("lib/zepto.min.js"))
			- head_js_array.push(javascript_path("remark/add-ons/progress-bar.js"))
		- def variable_name(path)
			- File.basename(path).gsub(".min", "").gsub(/\W/, "_")
		- head_js_array.uniq!
		- head_js_call = head_js_array.map { |x| variable_name(x)}.join(", ")
		:javascript
			// The javascript files to be loaded are determined by Middleman at compile:
			var #{
				head_js_array.map { |x| "#{variable_name(x)} = \"#{x}\""}.join(",\n\t  ")
			};
				
			// This call to head.js is automatically determined by Middleman at compile:
			head.load(#{head_js_call}, function(){
			
				// Ugly fix of HAML's formatting problems:
				document.getElementById("source").innerHTML = document.getElementById("source").innerHTML.replace(/^\s{4}/gm,"");
				
				// Load the slideshow:
				slideshow = remark.create();
				
				// Load any add-ons (may be none):
				#{if attach_twitter_name then "var twitter_name = \"#{if slide_configuration_data['twitter_name'] then slide_configuration_data['twitter_name'] else default_twitter_name end }\";
				$('.remark-slide-content').slice(#{if slide_configuration_data['twitter_name_start'] then (slide_configuration_data['twitter_name_start'] - 1) else (default_twitter_name_start - 1) end}).each(function(i,slide){
					$(slide).append('<div class=\"twitter_name\"><div class=\"twitter_badge\">@' + twitter_name +  '</div></div>');
				});" else "// No twitter name to attach" end}
				#{if load_charts then "load_charts();" else "// No charts to load" end}
				#{if attach_progress_bar then "attach_progress_bar()" else "// No progress bar" end}
			});
	%body
		%textarea{ :id => "source"}
			= yield
